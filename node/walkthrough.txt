Node app walkthroug

1. npm init
2. add type: module to package.json
3. import modules: http, url, path, fs from fs/promises
4. create PORT variable
5. create __filename and __dirname variables
	const __filename = url.fileURLToPath(import.meta.url)
	const __dirname = path.dirname(__filename)
6. In the end of the file, append server.listen function
7. create server asynchronous function(http.createServer)
	
	const server = http.createServer(async (req, res) => {
		try {
			if(req.method === 'GET') {
				let filePath;
				if(req.url === '/') {
					filePath = path.join(__dirname, 'index.html');
				} else if(req.url === '/about') {
					filePath = path.join(__dirname, 'about.html');
				} else if(req.url === '/something') {
					filePath = path.join(__dirname, 'something.html');
				} else {
					filePath = path.join(__dirname, '404.html');
				}

				const data = await fs.readFile(filePath, 'utf-8');
				res.writeHead(200, { 'Content-Type': 'text/html' });
				res.end(data);
			} else {
				throw new Error('Invalid method');
			}
		} catch(error) {
			res.writeHead(500, { 'Content-Type': 'text/plain' });
			res.end('Server error');
		}
	});

	Walkthrough:
		inside try and catch block, for GET requests:
			create filePath variable
			depending on the req.url, join the correct path with filePath
			After all req.url, create await function to read filePath
			res.writeHead
			res.end(data read from filePath)
			if an error happens, catch it by res.writeHead with error code and res.end(error message)
	